import {ProcessorState} from "InputProcessor";
import {InputSource} from "InputSource";
import {Document} from "Nodes";
import {Parser} from "Parser";
import {Assert} from "n4/mangel/assert/Assert";

export public class ParserTest {

	parse(s: string): Document {
		let parser = new Parser(new ProcessorState());
		let doc = parser.parse(new InputSource("test", s));
		return doc;
	}

	@Test
	public testEmpty() {
		let ast = this.parse("").stringify();
		Assert.equal(ast, '{"name":"spex"}');
	}

	@Test
	public testWord() {
		let ast = this.parse("word").stringify();
		Assert.equal(ast, '{"name":"spex","nodes":[{"content":"word"}]}');
	}

	@Test
	public testHelloWord() {
		let ast = this.parse("hello word");
		// console.log(ast.toXML());
		let astJSON = ast.stringify();
		Assert.equal(astJSON, '{"name":"spex","nodes":[{"content":"hello word"}]}');
	}

	@Test
	public testHelloNLWord() {
		let ast = this.parse("hello\nword");
		// console.log(ast.toXML());
		let astJSON = ast.stringify();
		Assert.equal(astJSON, '{"name":"spex","nodes":[{"content":"hello word"}]}');
	}

	@Test
	public testParagraph() {
		let ast = this.parse("hello\n\nword");
		// console.log(ast.toXML());
		let astJSON = ast.stringify();
		Assert.equal(astJSON,
			'{"name":"spex","nodes":[{"content":"hello"},{"name":"p","nodes":[{"content":"word"}]}]}');
	}

	@Test
	public testParagraphWithPunctation() {
		let ast = this.parse("hello\n\nword.");
//		console.log(ast.toXML());
		let astJSON = ast.stringify();
		Assert.equal(astJSON,
			'{"name":"spex","nodes":[{"content":"hello"},{"name":"p","nodes":[{"content":"word."}]}]}');
	}

	@Test
	public testPreBlock() {
		let ast = this.parse("hello\n\n    word");
		console.log(ast.toXML());
		let astJSON = ast.stringify();
		Assert.equal(astJSON,
			'{"name":"spex","nodes":[{"content":"hello"},{"name":"pre","nodes":[{"content":"word"}]}]}');
	}

}
//right click this module and select "Run As -> Test in Node.js" to see the test results
